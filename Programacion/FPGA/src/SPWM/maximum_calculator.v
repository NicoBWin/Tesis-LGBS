// -------------------------------------------------------------
// 
// File Name: hdlsrc\SPWM_HDLCoder_MCSI2024\Maximum_Calculator.v
// Created: 2025-01-08 18:47:49
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Maximum_Calculator
// Source Path: SPWM_HDLCoder_MCSI2024/SPWM_3mod_hdl/Maximum Calculator
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module maximum_calculator
          (alpha3_phase_Vab0,
           alpha3_phase_Vab120,
           alpha3_phase_Vab240,
           g_max);


  input   [6:0] alpha3_phase_Vab0;  // uint8
  input   [6:0] alpha3_phase_Vab120;  // uint8
  input   [6:0] alpha3_phase_Vab240;  // uint8
  output  [5:0] g_max;  // ufix6


  wire signed [7:0] Subtract_out_1;  // int8
  wire signed [7:0] Abs_out_1;  // uint8
  wire signed [7:0] Subtract_out_2;  // int8
  wire signed [7:0] Abs_out_2;  // uint8
  wire signed [7:0] Subtract_out_3;  // int8
  wire signed [7:0] Abs_out_3;  // uint16
  wire Relational_Operator_relop1;
  wire Relational_Operator1_relop1;
  wire Relational_Operator2_relop1;
  wire Decoder_out1;
  wire Decoder_out2;
  wire Decoder_out3;
  wire Decoder_out4;
  wire Decoder_out5;
  wire Decoder_out6;
  wire Decoder_out7;
  wire Decoder_out8;
  wire Logical_Operator_out1;
  wire Logical_Operator1_out1;
  wire Logical_Operator2_out1;
  wire Logical_Operator3_out1;
  wire Logical_Operator4_out1;
  wire Logical_Operator5_out1;
  wire [5:0] Bit_Concat_out1;  // ufix6


  assign Subtract_out_1 = {1'b0, alpha3_phase_Vab0} - {1'b0, alpha3_phase_Vab120};
  assign Abs_out_1 = (Subtract_out_1[7] ?  - (Subtract_out_1) : Subtract_out_1);


  assign Subtract_out_2 = {1'b0, alpha3_phase_Vab120} - {1'b0, alpha3_phase_Vab240};
  assign Abs_out_2 = (Subtract_out_2[7] ?  - (Subtract_out_2) : Subtract_out_2);


  assign Subtract_out_3 = {1'b0, alpha3_phase_Vab240} - {1'b0, alpha3_phase_Vab0};
  assign Abs_out_3 = (Subtract_out_3[7] ?  - (Subtract_out_3) : Subtract_out_3);


  assign Relational_Operator_relop1 = Abs_out_1 >= Abs_out_2;
  assign Relational_Operator1_relop1 = Abs_out_2 >= Abs_out_3;
  assign Relational_Operator2_relop1 = Abs_out_3 >= Abs_out_1;


  Decoder u_Decoder (.b2(Relational_Operator_relop1),
                     .b1(Relational_Operator1_relop1),
                     .b0_LSB(Relational_Operator2_relop1),
                     .Out1(Decoder_out1),
                     .Out2(Decoder_out2),
                     .Out3(Decoder_out3),
                     .Out4(Decoder_out4),
                     .Out5(Decoder_out5),
                     .Out6(Decoder_out6),
                     .Out7(Decoder_out7),
                     .Out8(Decoder_out8)
                     );
  assign Logical_Operator_out1 = Decoder_out8 | (Decoder_out7 | (Decoder_out1 | Decoder_out5));


  assign Logical_Operator1_out1 = Decoder_out8 | (Decoder_out4 | (Decoder_out1 | Decoder_out3));


  assign Logical_Operator2_out1 = Decoder_out8 | (Decoder_out6 | (Decoder_out1 | Decoder_out2));


  assign Logical_Operator3_out1 = Decoder_out8 | (Decoder_out7 | (Decoder_out1 | Decoder_out5));


  assign Logical_Operator4_out1 = Decoder_out8 | (Decoder_out4 | (Decoder_out1 | Decoder_out3));


  assign Logical_Operator5_out1 = Decoder_out8 | (Decoder_out6 | (Decoder_out1 | Decoder_out2));


  assign g_max = {Logical_Operator_out1, Logical_Operator1_out1, Logical_Operator2_out1, Logical_Operator3_out1, Logical_Operator4_out1, Logical_Operator5_out1};

endmodule  // maximum_calculator
